require('dotenv').config();
const express = require('express');
const cors = require('cors');
const bodyParser = require('body-parser');
const { OpenAI } = require("openai");

const app = express();
const port = 3000;

app.use(cors());
app.use(bodyParser.json());

const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

app.post('/gerar-contrato-completo', async (req, res) => {
    console.log("-> Requisi√ß√£o recebida para gerar contrato completo...");
    
    const data = req.body;

    let prompt = `
Voc√™ √© um especialista em direito contratual brasileiro. Sua tarefa √© redigir um contrato formal, completo e juridicamente s√≥lido com base EXCLUSIVAMENTE nos dados fornecidos.

**Modelo do Contrato Solicitado:** ${data.modeloContrato}

**DADOS FORNECIDOS:**
`;

    // Adiciona as partes com a nomenclatura correta
    if (data.modeloContrato === 'Loca√ß√£o de Im√≥vel') {
        prompt += `
**1. LOCADOR(A):**
- Nome/Raz√£o Social: ${data.parte1.nome}
- CPF/CNPJ: ${data.parte1.doc}
- Endere√ßo: ${data.parte1.endereco}
- E-mail: ${data.parte1.email}
- Telefone: ${data.parte1.telefone}

**2. LOCAT√ÅRIO(A):**
- Nome/Raz√£o Social: ${data.parte2.nome}
- CPF/CNPJ: ${data.parte2.doc}
- Endere√ßo: ${data.parte2.endereco}
- E-mail: ${data.parte2.email}
- Telefone: ${data.parte2.telefone}
`;
    } else if (data.modeloContrato === 'Venda e Compra') {
        prompt += `
**1. VENDEDOR(A):**
- Nome/Raz√£o Social: ${data.parte1.nome}
- CPF/CNPJ: ${data.parte1.doc}
- Endere√ßo: ${data.parte1.endereco}
- E-mail: ${data.parte1.email}
- Telefone: ${data.parte1.telefone}

**2. COMPRADOR(A):**
- Nome/Raz√£o Social: ${data.parte2.nome}
- CPF/CNPJ: ${data.parte2.doc}
- Endere√ßo: ${data.parte2.endereco}
- E-mail: ${data.parte2.email}
- Telefone: ${data.parte2.telefone}
`;
    } else { // Presta√ß√£o de Servi√ßos
        prompt += `
**1. CONTRATANTE:**
- Nome/Raz√£o Social: ${data.parte1.nome}
- CPF/CNPJ: ${data.parte1.doc}
- Endere√ßo: ${data.parte1.endereco}
- E-mail: ${data.parte1.email}
- Telefone: ${data.parte1.telefone}

**2. CONTRATADA:**
- Nome/Raz√£o Social: ${data.parte2.nome}
- CPF/CNPJ: ${data.parte2.doc}
- Endere√ßo: ${data.parte2.endereco}
- E-mail: ${data.parte2.email}
- Telefone: ${data.parte2.telefone}
`;
    }
    
    prompt += `
**3. DETALHES GERAIS DO CONTRATO:**
- Objeto: ${data.detalhesContrato.objeto}
- Valor Total: ${data.detalhesContrato.valor}
- Forma de Pagamento Principal: ${data.detalhesContrato.formaPagamento}
- Data de In√≠cio: ${data.detalhesContrato.dataInicio}
- Data de T√©rmino: ${data.detalhesContrato.dataTermino || 'Prazo Indeterminado'}
`;

    if (data.modeloContrato === 'Loca√ß√£o de Im√≥vel') {
        prompt += `
**4. DETALHES DA LOCA√á√ÉO:**
- Tipo de Garantia: ${data.detalhesLocacao.garantiaTipo}
- Valor da Garantia: ${data.detalhesLocacao.garantiaValor || 'N√£o aplic√°vel'}
- Finalidade: ${data.detalhesLocacao.finalidade}
`;
    }
    
    if (data.modeloContrato === 'Venda e Compra') {
        prompt += `
**4. DETALHES DA VENDA:**
- Data e Local de Entrega: ${data.detalhesVenda.entrega}
- Condi√ß√£o do Bem: ${data.detalhesVenda.condicao}
`;
    }
    
    prompt += `
**5. CONDI√á√ïES DE PAGAMENTO DETALHADAS:**
- Dia do Vencimento das Parcelas: todo dia ${data.condicoesPagamento.diaVencimento || 'N/A'}
- Dados Banc√°rios para Pagamento: ${data.condicoesPagamento.dadosBancarios || 'N√£o especificado'}
- Multa por Atraso: ${data.condicoesPagamento.multaPercentual || '0'}%
- Juros Mensais por Atraso: ${data.condicoesPagamento.juros || '0'}%

**6. DISPOSI√á√ïES GERAIS:**
- Foro de Elei√ß√£o: ${data.disposicoesGerais.foro}
- N√∫mero de Testemunhas: ${data.disposicoesGerais.testemunhas}
`;

    prompt += `
**INSTRU√á√ïES DE GERA√á√ÉO:**
1.  Comece com o t√≠tulo do contrato.
2.  Inicie com a cl√°usula de qualifica√ß√£o das partes, usando a nomenclatura correta (Locador/Locat√°rio, Vendedor/Comprador, Contratante/Contratada).
3.  Crie as cl√°usulas essenciais para o modelo de contrato "${data.modeloContrato}", detalhando o Objeto, o Pre√ßo e as Condi√ß√µes de Pagamento (incluindo as regras de atraso como multa e juros), o Prazo de Vig√™ncia e outras pertinentes ao modelo (como Garantia para loca√ß√£o ou Entrega para venda).
`;
    
    const opcionais = [];
    if (data.clausulasOpcionais.multaRescisao) opcionais.push("Multa por Rescis√£o Contratual");
    if (data.clausulasOpcionais.confidencialidade) opcionais.push("Confidencialidade");
    if (data.clausulasOpcionais.exclusividade) opcionais.push("Exclusividade");

    if (opcionais.length > 0) {
        prompt += `4. Inclua, obrigatoriamente, as seguintes cl√°usulas opcionais: ${opcionais.join(', ')}.\n`;
    }

    prompt += `5. Adicione uma cl√°usula "Do Foro" com a cidade e estado fornecidos.
6.  Finalize com um par√°grafo de fecho padr√£o ("E, por estarem assim justos e contratados...") e adicione as linhas para as assinaturas das partes e das ${data.disposicoesGerais.testemunhas} testemunhas.
7.  A sa√≠da deve ser em HTML, com t√≠tulos de cl√°usulas em <h2> (Ex: <h2>Cl√°usula Primeira - Do Objeto</h2>) e o texto em <p>. N√£o inclua as tags <html>, <head> ou <body>.`;
    
    try {
        const resposta = await openai.chat.completions.create({
            model: "gpt-3.5-turbo",
            messages: [{ role: "user", content: prompt }],
            temperature: 0.7,
            max_tokens: 3000,
        });

        console.log("‚úÖ Contrato detalhado gerado pela IA com sucesso.");
        const contratoCompletoHtml = resposta.choices[0].message.content.trim();
        
        res.status(200).send(contratoCompletoHtml);

    } catch (error) {
        console.error("‚ùå Erro ao chamar a OpenAI:", error);
        res.status(500).send(`<p style="color: red;"><strong>Erro:</strong> N√£o foi poss√≠vel gerar o contrato com a IA.</p>`);
    }
});

app.listen(port, () => {
    console.log(`üöÄ Servidor rodando em http://localhost:${port}`);
});